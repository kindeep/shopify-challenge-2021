[{"G:\\projects\\shopify-challenge-2021\\src\\App.tsx":"1","G:\\projects\\shopify-challenge-2021\\src\\index.tsx":"2","G:\\projects\\shopify-challenge-2021\\src\\atoms\\moviesState.ts":"3","G:\\projects\\shopify-challenge-2021\\src\\components\\Movies.tsx":"4","G:\\projects\\shopify-challenge-2021\\src\\components\\MovieDisplay.tsx":"5","G:\\projects\\shopify-challenge-2021\\src\\components\\Nominations.tsx":"6","G:\\projects\\shopify-challenge-2021\\src\\reportWebVitals.ts":"7","G:\\projects\\shopify-challenge-2021\\src\\atoms\\nominationsState.ts":"8"},{"size":1205,"mtime":1608189675978,"results":"9","hashOfConfig":"10"},{"size":931,"mtime":1608185350915,"results":"11","hashOfConfig":"10"},{"size":190,"mtime":1608180066364,"results":"12","hashOfConfig":"10"},{"size":2636,"mtime":1608190627503,"results":"13","hashOfConfig":"10"},{"size":4381,"mtime":1608190124817,"results":"14","hashOfConfig":"10"},{"size":1946,"mtime":1608188581684,"results":"15","hashOfConfig":"10"},{"size":425,"mtime":1607744491369,"results":"16","hashOfConfig":"10"},{"size":205,"mtime":1608189495197,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ibyvrk",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\projects\\shopify-challenge-2021\\src\\App.tsx",["36","37"],"G:\\projects\\shopify-challenge-2021\\src\\index.tsx",[],"G:\\projects\\shopify-challenge-2021\\src\\atoms\\moviesState.ts",[],"G:\\projects\\shopify-challenge-2021\\src\\components\\Movies.tsx",["38","39"],"G:\\projects\\shopify-challenge-2021\\src\\components\\MovieDisplay.tsx",["40","41","42","43"],"import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  IconButton,\r\n  makeStyles,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Movie from \"../models/movie.model\";\r\nimport nominationsState from \"../atoms/nominationsState\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    marginBottom: theme.spacing(2),\r\n    display: \"flex\",\r\n  },\r\n  posterBg: {\r\n    position: \"absolute\",\r\n    top: -10,\r\n    left: -10,\r\n    bottom: -10,\r\n    right: -10,\r\n    backgroundSize: \"cover !important\",\r\n    backgroundPosition: \"center !important\",\r\n    backgroundRepeat: \"no-repeat !important\",\r\n    filter: \"blur(5px) brightness(0.4)\",\r\n    width: \"calc(100% + 20px)\",\r\n    height: \"calc(100% + 20px)\",\r\n  },\r\n  poster: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"contain\",\r\n    objectPosition: \"center\",\r\n    zIndex: 2,\r\n  },\r\n  posterImgBg: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"contain\",\r\n    objectPosition: \"center\",\r\n    filter: \"brightness(1)\",\r\n    zIndex: 1,\r\n  },\r\n  posterContainer: {\r\n    minHeight: \"8rem\",\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n    flex: \"50%\",\r\n  },\r\n  content: {\r\n    flex: \"50%\",\r\n  },\r\n}));\r\n\r\nexport default function MovieDisplay({ movie }: { movie: Movie }) {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [nominations, setNominations] = useRecoilState(nominationsState);\r\n  const nominated =\r\n    nominations.findIndex((m) => m.imdbID === movie.imdbID) !== -1;\r\n  return (\r\n    <>\r\n      <Card variant=\"outlined\" className={classes.card}>\r\n        <div className={classes.posterContainer}>\r\n          <img src={movie.Poster} className={classes.poster} alt=\"\"></img>\r\n          <img src={movie.Poster} className={classes.posterImgBg} alt=\"\"></img>\r\n          {/* Handle png backgrounds */}\r\n          <div\r\n            style={{ backgroundImage: `url(${movie.Poster})` }}\r\n            className={classes.posterBg}\r\n          ></div>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <CardHeader title={movie.Title} subheader={movie.Year}></CardHeader>\r\n          <CardActions>\r\n            {!nominated && (\r\n              <Button\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  setNominations((prev) => {\r\n                    const newList = [{ ...movie }, ...prev];\r\n\r\n                    if (prev.length < 5) {\r\n                      localStorage.setItem(\r\n                        nominationsState.key,\r\n                        JSON.stringify(newList)\r\n                      );\r\n\r\n                      return newList;\r\n                    } else {\r\n                      enqueueSnackbar(\r\n                        \"You already have 5 nominations! delete one of them if you want to add a different one.\",\r\n                        { variant: \"error\" }\r\n                      );\r\n                      return prev;\r\n                    }\r\n                  });\r\n                }}\r\n              >\r\n                Nominate movie\r\n              </Button>\r\n            )}\r\n            {nominated && (\r\n              <>\r\n                <Tooltip title=\"Remove nomination\">\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      setNominations((prev) => {\r\n                        const deleteIndex = prev.findIndex(\r\n                          (m) => m.imdbID === movie.imdbID\r\n                        );\r\n                        const newList = [...prev];\r\n                        newList.splice(deleteIndex, 1);\r\n\r\n                        localStorage.setItem(\r\n                          nominationsState.key,\r\n                          JSON.stringify(newList)\r\n                        );\r\n\r\n                        return newList;\r\n                      });\r\n                    }}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </>\r\n            )}\r\n          </CardActions>\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","G:\\projects\\shopify-challenge-2021\\src\\components\\Nominations.tsx",["44","45"],"import { makeStyles, TextField, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport nominationsState from \"../atoms/nominationsState\";\r\nimport MovieDisplay from \"./MovieDisplay\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { AnimatePresence, AnimateSharedLayout, motion } from \"framer-motion\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n  gutterBottom: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function NOminations() {\r\n  const [nominations, setNominations] = useRecoilState(nominationsState);\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.container}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Your Nominations\r\n      </Typography>\r\n      <motion.div layout>\r\n        {nominations && nominations.length === 5 && (\r\n          <MuiAlert className={classes.gutterBottom} variant=\"filled\">\r\n            You've selected all 5 Nominations!\r\n          </MuiAlert>\r\n        )}\r\n      </motion.div>\r\n      <AnimateSharedLayout>\r\n        <motion.div>\r\n          {nominations?.map((movie) => (\r\n            <div key={`nomination_${movie.imdbID}`}>\r\n              <motion.div layout>\r\n                <AnimatePresence>\r\n                  <MovieDisplay movie={movie}></MovieDisplay>\r\n                </AnimatePresence>\r\n              </motion.div>\r\n            </div>\r\n          ))}\r\n        </motion.div>\r\n      </AnimateSharedLayout>\r\n\r\n      <motion.div layout>\r\n        {(!nominations || nominations.length === 0) && (\r\n          <MuiAlert\r\n            className={classes.gutterBottom}\r\n            variant=\"filled\"\r\n            severity=\"warning\"\r\n          >\r\n            You don't have any nominations! Search for movies and add\r\n            nominations to this list.\r\n          </MuiAlert>\r\n        )}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n","G:\\projects\\shopify-challenge-2021\\src\\reportWebVitals.ts",[],"G:\\projects\\shopify-challenge-2021\\src\\atoms\\nominationsState.ts",[],{"ruleId":"46","severity":1,"message":"47","line":16,"column":10,"nodeType":"48","messageId":"49","endLine":16,"endColumn":21},{"ruleId":"50","severity":1,"message":"51","line":27,"column":6,"nodeType":"52","endLine":27,"endColumn":8,"suggestions":"53"},{"ruleId":"46","severity":1,"message":"54","line":51,"column":17,"nodeType":"48","messageId":"49","endLine":51,"endColumn":24},{"ruleId":"46","severity":1,"message":"55","line":51,"column":32,"nodeType":"48","messageId":"49","endLine":51,"endColumn":39},{"ruleId":"46","severity":1,"message":"56","line":5,"column":3,"nodeType":"48","messageId":"49","endLine":5,"endColumn":14},{"ruleId":"46","severity":1,"message":"57","line":7,"column":3,"nodeType":"48","messageId":"49","endLine":7,"endColumn":12},{"ruleId":"46","severity":1,"message":"58","line":11,"column":3,"nodeType":"48","messageId":"49","endLine":11,"endColumn":13},{"ruleId":"46","severity":1,"message":"59","line":14,"column":8,"nodeType":"48","messageId":"49","endLine":14,"endColumn":15},{"ruleId":"46","severity":1,"message":"60","line":1,"column":22,"nodeType":"48","messageId":"49","endLine":1,"endColumn":31},{"ruleId":"46","severity":1,"message":"61","line":19,"column":23,"nodeType":"48","messageId":"49","endLine":19,"endColumn":37},"@typescript-eslint/no-unused-vars","'nominations' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setNominations'. Either include it or remove the dependency array.","ArrayExpression",["62"],"'success' is assigned a value but never used.","'message' is assigned a value but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Typography' is defined but never used.","'AddIcon' is defined but never used.","'TextField' is defined but never used.","'setNominations' is assigned a value but never used.",{"desc":"63","fix":"64"},"Update the dependencies array to be: [setNominations]",{"range":"65","text":"66"},[697,699],"[setNominations]"]